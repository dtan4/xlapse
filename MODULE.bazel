###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

bazel_dep(name = "rules_go", version = "0.54.1")
bazel_dep(name = "gazelle", version = "0.43.0")
bazel_dep(name = "rules_proto", version = "7.1.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution
# platforms, using the version given from the `go.mod` file.
go_sdk.from_file(go_mod = "//:go.mod")

# Download an SDK for the host OS & architecture as well as common remote execution
# platforms, with a specific version.
go_sdk.download(version = "1.24.3")

# Another alternative is to register the Go SDK installed on the host (see the nota bene below).
go_sdk.host()

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_aws_aws_lambda_go", "com_github_aws_aws_sdk_go_v2", "com_github_aws_aws_sdk_go_v2_config", "com_github_aws_aws_sdk_go_v2_service_lambda", "com_github_aws_aws_sdk_go_v2_service_s3", "com_github_aws_aws_xray_sdk_go_v2", "com_github_getsentry_sentry_go", "com_github_google_go_cmp", "io_k8s_sigs_yaml", "org_golang_google_protobuf", "org_uber_go_zap")
